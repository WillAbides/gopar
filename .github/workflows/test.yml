name: Test

on: [push, pull_request]

jobs:
  test:
    env:
      GO111MODULE: on
    strategy:
      matrix:
        go-version: [1.14.x, 1.15.x, 1.16.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Run verify-gofmt.sh
      run: .github/scripts/verify-gofmt.sh .
    - name: Run go vet
      run: go vet ./...
    # This (and similar install commands) pollute go.mod,
    # on go versions earlier than 1.16, which isn't great.
    # go 1.16 fixes this by letting you specify a version
    # suffix, but that isn't supported in earlier versions.
    # This will become much cleaner once the earliest
    # supported version is 1.16 or later.
    - name: Install golint
      run: go install golang.org/x/lint/golint${{ fromJSON('["", "@latest"]')[matrix.go-version == '1.16.x'] }}
    - name: Run golint
      run: .github/scripts/verify-golint.sh ./...
    - name: Install errcheck
      run: go install github.com/kisielk/errcheck${{ fromJSON('["", "@latest"]')[matrix.go-version == '1.16.x'] }}
    - name: Run errcheck
      run: errcheck ./...
    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck${{ fromJSON('["", "@latest"]')[matrix.go-version == '1.16.x'] }}
    - name: Run staticcheck
      run: staticcheck ./...
    - name: Run go install
      run: go install ./...
    - name: Run go test (GOARCH=amd64)
      run: go test ./...
      env:
        GOARCH: amd64
    - name: Run go test (GOARCH=386)
      # darwin/386 isn't supported anymore.
      if: matrix.os != 'macos-latest'
      run: go test ./...
      env:
        GOARCH: 386
